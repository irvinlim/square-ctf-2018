from __future__ import print_function

import itertools
import os

from PIL import Image, ImageDraw, ImageFont
from pyzbar.pyzbar import decode

images = [Image.open(os.path.join('shredded', '%s.png' % i)) for i in xrange(0, 27)]
widths, heights = zip(*(i.size for i in images))

total_width = sum(widths)
max_height = max(heights)

new_im = Image.new('RGB', (total_width, max_height))
draw = ImageDraw.Draw(new_im)
font = ImageFont.truetype("Roboto-Light.ttf", 6)

left = [
    # Blank
    0,
    11,
    9,
    # Black border
    5,
    # White border
    6,
    # 3x black inner
    2,
    16,
    25,
    # White border
    15,
    # Black border
    26,
    # White padding
    3,
]

middle = [
    # Middle area...
    4,
    10,
    20,
    19,
    21,
]

right = [
    # White padding
    7,
    # Black border
    14,
    # White border
    18,
    # 3x inner square
    22,
    23,
    24,
    # White border
    1,
    # Black border
    8,
    # Blank
    12,
    17,
    13,
]

joined = left + middle + right

permutes = [
    [4, 8],
    [5, 6, 7],
    [10, 16],
    [11, 13, 15],
    [12, 14],
    [17, 23],
    [18, 22],
    [19, 20, 21],
]

permute_values = []
for i, permute in enumerate(permutes):
    values = [joined[x] for x in permute]
    perms = list(itertools.permutations(values))
    permute_values.append(perms)

for i, product in enumerate(itertools.product(*permute_values)):
    enum_product = []
    for j, group in enumerate(product):
        orig_idx = permutes[j]
        enum_product.append(zip(orig_idx, group))

    flatten = [x for y in enum_product for x in y]

    # Create new order
    order = [x for x in joined]
    for idx, value in flatten:
        order[idx] = value

    x_offset = 0
    for j in order:
        new_im.paste(images[j], (x_offset, 0))
        draw.text((x_offset, 5), str(j), (0, 0, 0), font=font)
        x_offset += images[j].size[0]

    data = decode(new_im)

    if data:
        print(data[0].data)
        new_im.save('flag.png')
        new_im.show()
        break
